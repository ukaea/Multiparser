stages:
  - Testing and Quality
  - SonarQube
  - pages


cache: {}

.setup_template_unit: &setup_unit
  image: "python:3.10"
  tags:
    - ubuntu
    - lower-privacy
  before_script:
    - pip install poetry
    - poetry install --all-extras

Unit Tests:
  stage: Testing and Quality
  <<: *setup_unit
  script:
    - poetry config virtualenvs.in-project true
    - poetry run pytest tests --cov=multiparser --cov-report=xml --cov-report=term --cov-report=html
  artifacts:
    untracked: false
    expire_in: "1 hr"
    paths:
      - "coverage*"
      - "htmlcov"


Security:
  stage: Testing and Quality
  <<: *setup_unit
  allow_failure: true
  script:
    - poetry run bandit -r multiparser -lll -v
    - poetry run bandit -r multiparser -lll -f json -o bandit.json
  artifacts:
    untracked: false
    expire_in: "1 hr"
    paths:
      - "bandit.json"
  except:
      - tags


pylint:
  stage: Testing and Quality
  only:
    - main
  image: "python:3.10.12-slim-bullseye"
  script:
    - pip install pylint anybadge click
    - pylint multiparser/ --exit-zero | tee code_quality_report.log
    - anybadge -l "code quality" -v $(cat code_quality_report.log | tail -n 2 | cut -d ' ' -f 7 | cut -d '/' -f 1 | xargs) -f code_quality.svg
  artifacts:
    paths:
      - code_quality_report.log
      - code_quality.svg
    when: always
    expire_in: 1 hr
  tags:
    - ubuntu
    - lower-privacy

sonarqube-check:
  stage: SonarQube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  needs: ["Security", "Unit Tests"]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main

pages:
  stage: pages
  only:
    - main
  <<: *setup_unit
  dependencies: ["pylint", "Unit Tests"]
  script:
    - poetry run mkdocs build -d public
    - mkdir -p public/files/media/
    - mkdir -p public/files/logs/
    - mv htmlcov/* public/
    - mv code_quality_report.log public/files/logs/
    - mv code_quality.svg public/files/media/
  artifacts:
    when: always
    expire_in: 1 hr
    paths:
      - public
  tags:
    - ubuntu
    - lower-privacy
